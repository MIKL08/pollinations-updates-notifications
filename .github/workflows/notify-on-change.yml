name: Notify Pollinations models changes

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  check-models:
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Restore cache
        id: cache
        uses: actions/cache@v3
        with:
          path: pollinations_models.json
          key: models-${{ steps.date.outputs.date }}-${{ hashFiles('pollinations_models.json') }}

      - name: Fetch models
        id: fetch
        run: |
          set -euo pipefail
          # Try up to 3 times with 10 second delay between attempts
          for i in {1..3}; do
            if curl -sS --fail -A "github-actions-bot" "https://text.pollinations.ai/models" -o /tmp/models.json; then
              echo "success=true" >> $GITHUB_OUTPUT
              exit 0
            fi
            echo "Attempt $i failed, retrying in 10 seconds..."
            sleep 10
          done
          echo "::error::Failed to fetch models after 3 attempts"
          echo "success=false" >> $GITHUB_OUTPUT
          exit 1

      - name: Compare models
        if: steps.fetch.outputs.success == 'true'
        id: compare
        run: |
          set -euo pipefail
          python3 - <<'PY'
          [Previous Python code remains exactly the same]
          PY

          CHANGED=$(cat /tmp/changed.flag 2>/dev/null || echo false)
          if [ "$CHANGED" = "true" ]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

          {
            echo 'message<<EOF'
            cat /tmp/message.txt
            echo EOF
          } >> "$GITHUB_OUTPUT"

      - name: Save cache
        if: steps.compare.outputs.changed == 'true'
        uses: actions/cache@v3
        with:
          path: pollinations_models.json
          key: models-${{ steps.date.outputs.date }}-${{ hashFiles('pollinations_models.json') }}

      - name: Notify Telegram
        if: steps.compare.outputs.changed == 'true'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üì¢ Updating the list of Pollinations models

            ${{ steps.compare.outputs.message }}

      - name: Notify API failure
        if: steps.fetch.outputs.success != 'true'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ‚ÄºÔ∏è Failed to fetch Pollinations models
            The API endpoint returned error after 3 attempts